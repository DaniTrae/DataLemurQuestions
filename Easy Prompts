--Title: Page With No Likes--
--Summary: Assume you're given two tables containing data about Facebook Pages and their respective likes (as in "Like a Facebook Page").--
--Write a query to return the IDs of the Facebook pages that have zero likes. The output should be sorted in ascending order based on the page IDs.--
--NOTES: Out of the 5 pages in the dataset, 2 returned with having no likes on the page--

SELECT 
  pages.page_id
FROM 
  pages 
LEFT JOIN page_likes AS likes
  ON pages.page_id = likes.page_id
WHERE
  likes.page_id IS NULL;



--Title: Unfinished Parts--
--Summary: Tesla is investigating production bottlenecks and they need your help to extract the relevant data.--
--Write a query that determines which parts with the assembly steps have initiated the assembly process but remain unfinished.--
--NOTES: Wrote query to show which parts were in assembly with NULL finish dates.--

SELECT
  part,
  assembly_step
FROM
  parts_assembly
WHERE
  finish_date IS NULL;



--Title: Histogram of Tweets--
--Summary: Assume you're given a table Twitter tweet data, write a query to obtain a histogram of tweets posted per user in 2022.--
--Output the tweet count per user as the bucket and the number of Twitter users who fall into that bucket.--
--NOTES: Discovered in the year 2022 there was two users who posted once and one user who posted twice.--

SELECT
  tweet_count_per_user AS tweet_bucket,
  COUNT(user_id) AS users_num
FROM
(
  SELECT
   user_id,
   COUNT(tweet_id) AS tweet_count_per_user
  FROM
   tweets
  WHERE
   tweet_date BETWEEN '2022-01-01' AND '2022-12-31'
  GROUP BY
   user_id
) 
  AS total_tweets
GROUP BY tweet_count_per_user;



--Title: Laptop vs. Mobile Viewership--
--Summary: Assume you're given the table on user viewership categorised by device type where the three types are laptop, tablet, and phone.--
--Write a query that calculates the total viewership for laptops and mobile devices where mobile is defined as the sum of tablet and phone viewership.--
--Output the total viewership for laptops as laptop_reviews and the total viewership for mobile devices as mobile_views.--
--NOTES: Laptop viewer were two and mobile viewers were three.--

SELECT
  COUNT(*) FILTER (WHERE device_type = 'laptop') AS laptop_views,
  COUNT(*) FILTER (WHERE device_type IN ('tablet', 'phone')) AS mobile_views
FROM
  viewership;



--Title: Data Science Skills--
--Summary: Given a table of candidates and their skills, you're tasked with finding the candidates best suited for an open Data Science job.--
--You want to find candidates who are proficient in Python, Tableau, and PostgreSQL.--
--Write a query to list the candidates who possess all of the required skills for the job. Sort the output by candidate ID in ascending order.--
--NOTES: The query returned that 2 possiable candidates met the criteria for this job skills.--

SELECT
  candidate_id
FROM 
  candidates
WHERE
  skill IN ('Python', 'Tableau', 'PostgreSQL')
GROUP BY
  candidate_id
HAVING COUNT(skill) = 3
ORDER BY
  candidate_id;



--Title: Average Post Hiatus (Part 1)--
--Summary: Given a table of Facebook posts, for each user who posted at least twice in 2021, --
--write a query to find the number of days between each userâ€™s first post of the year and last post of the year in the year 2021.--
--Output the user and number of the days between each user's first and last post.--
--NOTES: There were two users who fell into the range and met criteria, one having 307 days between posts and the other having 206--

SELECT
  user_id,
  MAX(post_date::DATE) - MIN(post_date::DATE) AS days_between
FROM
  posts
WHERE
  DATE_PART('year', post_date::DATE) = 2021
GROUP BY
  user_id
HAVING COUNT(post_id)>1


